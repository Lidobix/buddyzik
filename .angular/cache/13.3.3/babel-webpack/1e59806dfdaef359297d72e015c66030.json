{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\33652\\\\Documents\\\\Projets persos\\\\buddyzik\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as moment from 'moment';\nimport { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./buddy.service\";\nimport * as i3 from \"./server.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"./display-nav.service\";\nmoment().format();\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, buddyService, serverService, router, displayNavService) {\n      this.http = http;\n      this.buddyService = buddyService;\n      this.serverService = serverService;\n      this.router = router;\n      this.displayNavService = displayNavService;\n      this.minimumAge = 18;\n      this.pictureExtension = ['jpg', 'jpeg', 'png', 'bmp', 'svg', 'gif', 'webp'];\n      this.passwordPattern = '^[^<>](?=.{8,}$)(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*\\\\W).*[^<>]$';\n    } // newUser!: Buddy;\n\n\n    ngOnInit() {\n      console.log('redémarrage AuthService');\n    }\n\n    logout() {\n      this.displayNavService.setDisplayNav(false);\n      localStorage.clear();\n      this.router.navigateByUrl('/auth/login');\n    } // public isLoggedIn() {\n    //   return moment().isBefore(this.getExpiration());\n    // }\n    // isLoggedOut() {\n    //   return !this.isLoggedIn();\n    // }\n\n\n    getAuth() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        _this.isLogged = yield lastValueFrom(_this.http.get(_this.serverService.serverUrl + '/auth'));\n      })();\n    } // getExpiration() {\n    //   const expiration = localStorage.getItem('expires_at');\n    //   console.log('expiration', expiration);\n    //   console.log('moment : ', moment());\n    //   // const expiresAt = JSON.parse(expiration);\n    //   // return moment(expiresAt);\n    //   return 12;\n    // }\n\n\n    authUser(form, route) {\n      if (!form.valid) {\n        alert('Formulaire non valide!');\n      } else {\n        try {\n          this.http.post(this.serverService.serverUrl + route, form.value).subscribe(authentication => {\n            if (authentication.success === true) {\n              alert(authentication.message);\n              localStorage.setItem('token', authentication.token);\n              localStorage.setItem('uuid', authentication.user.uuid);\n              this.buddyService.userIdBuilder(authentication.user);\n              this.router.navigateByUrl('/home');\n            } else {\n              alert(authentication.message);\n            }\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.BuddyService), i0.ɵɵinject(i3.ServerService), i0.ɵɵinject(i4.Router), i0.ɵɵinject(i5.DisplayNavService));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}