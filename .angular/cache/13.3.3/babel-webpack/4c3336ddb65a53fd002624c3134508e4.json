{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\33652\\\\Documents\\\\Projets persos\\\\buddyzik\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as moment from 'moment';\nimport { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./server.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"./displaying-elements.service\";\nimport * as i5 from \"./profile.service\";\nmoment().format();\nexport class AuthService {\n  constructor(http, // private buddyService: BuddyService,\n  serverService, router, displayingElementsService, profileService) {\n    this.http = http;\n    this.serverService = serverService;\n    this.router = router;\n    this.displayingElementsService = displayingElementsService;\n    this.profileService = profileService;\n    this.minimumAge = 18;\n    this.pictureExtension = ['jpg', 'jpeg', 'png', 'bmp', 'svg', 'gif', 'webp', 'JPG', 'JPEG', 'PNG', 'BMP', 'SVG', 'GIF', 'WEBP'];\n    this.passwordPattern = '^[^<>](?=.{8,}$)(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*\\\\W).*[^<>]$';\n  } // newUser!: Buddy;\n\n\n  ngOnInit() {\n    console.log('redémarrage AuthService');\n  }\n\n  logout() {\n    this.displayingElementsService.setDisplayNav(false); // this.displayingElementsService.setDisplayModif(false);\n\n    localStorage.clear();\n    this.router.navigateByUrl('/auth/login');\n  } // public isLoggedIn() {\n  //   return moment().isBefore(this.getExpiration());\n  // }\n  // isLoggedOut() {\n  //   return !this.isLoggedIn();\n  // }\n\n\n  getMyToken() {\n    // console.log('fetch du token');\n    this.myToken = localStorage.getItem('token');\n\n    if (this.myToken != null && this.myToken != undefined) {\n      return this.myToken;\n    } else {\n      alert(\"Problème d'identification, vous allez être déconnecté\");\n      this.logout();\n    }\n  }\n\n  getMyId() {\n    // console.log('fetch du uuid');\n    this.myID = localStorage.getItem('uuid'); // console.log(this.myID);\n\n    if (this.myID != null && this.myID != undefined) {\n      // console.log(this.myID);\n      return this.myID;\n    } else {\n      alert(\"Problème d'identification, vous allez être déconnecté\");\n      this.logout();\n    }\n  }\n\n  getAuth() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.isLogged = yield lastValueFrom(_this.http.get(_this.serverService.serverUrl + '/auth'));\n    })();\n  } // getExpiration() {\n  //   const expiration = localStorage.getItem('expires_at');\n  //   console.log('expiration', expiration);\n  //   console.log('moment : ', moment());\n  //   // const expiresAt = JSON.parse(expiration);\n  //   // return moment(expiresAt);\n  //   return 12;\n  // }\n\n\n  authUser(form, route) {\n    if (!form.valid) {\n      alert('Formulaire non valide!');\n    } else {\n      try {\n        this.http.post(this.serverService.serverUrl + route, form.value).subscribe(authentication => {\n          if (authentication.success === true) {\n            alert(authentication.message);\n            localStorage.setItem('token', authentication.token);\n            localStorage.setItem('uuid', authentication.user.uuid); // this.buddyService.userIdBuilder(authentication.user);\n\n            this.profileService.goToProfile(authentication.user.uuid); // this.router.navigateByUrl('/home');\n          } else {\n            alert(authentication.message);\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  updatehUser(form, route) {\n    if (!form.valid) {\n      alert('Formulaire non valide!');\n    } else {\n      try {\n        console.log('soumission du formulaire...');\n        this.http.post(this.serverService.serverUrl + route, form.value).subscribe(res => {\n          console.log(res);\n          alert(res.message);\n          console.log('route = ', route); // if (authentication.success === true) {\n          //   alert(authentication.message);\n          //   localStorage.setItem('token', authentication.token);\n          //   localStorage.setItem('uuid', authentication.user.uuid);\n          //   // this.buddyService.userIdBuilder(authentication.user);\n\n          if (res.token != undefined) {\n            localStorage.setItem('token', res.token);\n          } //   this.router.navigateByUrl('/home');\n          // } else {\n          //   alert(authentication.message);\n          // }\n\n\n          if (route === '/updateprofile' && res.success === true) {\n            this.profileService.goToProfile(this.getMyId()); // this.router.navigateByUrl('/blankprofile');\n          }\n\n          if (route === '/updateprofile' && res.success === false) {\n            this.router.navigateByUrl('/edition'); // this.profileService.goToProfile(this.getMyId());\n            // this.router.navigateByUrl('/blankprofile');\n          }\n\n          if (route === '/uploadpost') {\n            console.log('retour au profil'); // this.profileService.goToProfile(this.getMyId());\n\n            this.router.navigateByUrl('/blankprofile'); // this.profileService.goToProfile(this.getMyId());\n            // this.router.navigateByUrl('/edition');\n          }\n\n          if (route === '/resetpassword') {\n            this.router.navigateByUrl('/auth/login');\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ServerService), i0.ɵɵinject(i3.Router), i0.ɵɵinject(i4.DisplayingElementsService), i0.ɵɵinject(i5.ProfileService));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/33652/Documents/Projets persos/buddyzik/src/services/auth.service.ts"],"names":["moment","lastValueFrom","i0","i1","i2","i3","i4","i5","format","AuthService","constructor","http","serverService","router","displayingElementsService","profileService","minimumAge","pictureExtension","passwordPattern","ngOnInit","console","log","logout","setDisplayNav","localStorage","clear","navigateByUrl","getMyToken","myToken","getItem","undefined","alert","getMyId","myID","getAuth","isLogged","get","serverUrl","authUser","form","route","valid","post","value","subscribe","authentication","success","message","setItem","token","user","uuid","goToProfile","error","updatehUser","res","ɵfac","AuthService_Factory","t","ɵɵinject","HttpClient","ServerService","Router","DisplayingElementsService","ProfileService","ɵprov","ɵɵdefineInjectable","factory","providedIn"],"mappings":"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","sourcesContent":["import * as moment from 'moment';\r\nimport { lastValueFrom } from 'rxjs';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nimport * as i2 from \"./server.service\";\r\nimport * as i3 from \"@angular/router\";\r\nimport * as i4 from \"./displaying-elements.service\";\r\nimport * as i5 from \"./profile.service\";\r\nmoment().format();\r\nexport class AuthService {\r\n    constructor(http, \r\n    // private buddyService: BuddyService,\r\n    serverService, router, displayingElementsService, profileService) {\r\n        this.http = http;\r\n        this.serverService = serverService;\r\n        this.router = router;\r\n        this.displayingElementsService = displayingElementsService;\r\n        this.profileService = profileService;\r\n        this.minimumAge = 18;\r\n        this.pictureExtension = [\r\n            'jpg',\r\n            'jpeg',\r\n            'png',\r\n            'bmp',\r\n            'svg',\r\n            'gif',\r\n            'webp',\r\n            'JPG',\r\n            'JPEG',\r\n            'PNG',\r\n            'BMP',\r\n            'SVG',\r\n            'GIF',\r\n            'WEBP',\r\n        ];\r\n        this.passwordPattern = '^[^<>](?=.{8,}$)(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*\\\\W).*[^<>]$';\r\n    }\r\n    // newUser!: Buddy;\r\n    ngOnInit() {\r\n        console.log('redémarrage AuthService');\r\n    }\r\n    logout() {\r\n        this.displayingElementsService.setDisplayNav(false);\r\n        // this.displayingElementsService.setDisplayModif(false);\r\n        localStorage.clear();\r\n        this.router.navigateByUrl('/auth/login');\r\n    }\r\n    // public isLoggedIn() {\r\n    //   return moment().isBefore(this.getExpiration());\r\n    // }\r\n    // isLoggedOut() {\r\n    //   return !this.isLoggedIn();\r\n    // }\r\n    getMyToken() {\r\n        // console.log('fetch du token');\r\n        this.myToken = localStorage.getItem('token');\r\n        if (this.myToken != null && this.myToken != undefined) {\r\n            return this.myToken;\r\n        }\r\n        else {\r\n            alert(\"Problème d'identification, vous allez être déconnecté\");\r\n            this.logout();\r\n        }\r\n    }\r\n    getMyId() {\r\n        // console.log('fetch du uuid');\r\n        this.myID = localStorage.getItem('uuid');\r\n        // console.log(this.myID);\r\n        if (this.myID != null && this.myID != undefined) {\r\n            // console.log(this.myID);\r\n            return this.myID;\r\n        }\r\n        else {\r\n            alert(\"Problème d'identification, vous allez être déconnecté\");\r\n            this.logout();\r\n        }\r\n    }\r\n    async getAuth() {\r\n        this.isLogged = await lastValueFrom(this.http.get(this.serverService.serverUrl + '/auth'));\r\n    }\r\n    // getExpiration() {\r\n    //   const expiration = localStorage.getItem('expires_at');\r\n    //   console.log('expiration', expiration);\r\n    //   console.log('moment : ', moment());\r\n    //   // const expiresAt = JSON.parse(expiration);\r\n    //   // return moment(expiresAt);\r\n    //   return 12;\r\n    // }\r\n    authUser(form, route) {\r\n        if (!form.valid) {\r\n            alert('Formulaire non valide!');\r\n        }\r\n        else {\r\n            try {\r\n                this.http\r\n                    .post(this.serverService.serverUrl + route, form.value)\r\n                    .subscribe((authentication) => {\r\n                    if (authentication.success === true) {\r\n                        alert(authentication.message);\r\n                        localStorage.setItem('token', authentication.token);\r\n                        localStorage.setItem('uuid', authentication.user.uuid);\r\n                        // this.buddyService.userIdBuilder(authentication.user);\r\n                        this.profileService.goToProfile(authentication.user.uuid);\r\n                        // this.router.navigateByUrl('/home');\r\n                    }\r\n                    else {\r\n                        alert(authentication.message);\r\n                    }\r\n                });\r\n            }\r\n            catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n    updatehUser(form, route) {\r\n        if (!form.valid) {\r\n            alert('Formulaire non valide!');\r\n        }\r\n        else {\r\n            try {\r\n                console.log('soumission du formulaire...');\r\n                this.http\r\n                    .post(this.serverService.serverUrl + route, form.value)\r\n                    .subscribe((res) => {\r\n                    console.log(res);\r\n                    alert(res.message);\r\n                    console.log('route = ', route);\r\n                    // if (authentication.success === true) {\r\n                    //   alert(authentication.message);\r\n                    //   localStorage.setItem('token', authentication.token);\r\n                    //   localStorage.setItem('uuid', authentication.user.uuid);\r\n                    //   // this.buddyService.userIdBuilder(authentication.user);\r\n                    if (res.token != undefined) {\r\n                        localStorage.setItem('token', res.token);\r\n                    }\r\n                    //   this.router.navigateByUrl('/home');\r\n                    // } else {\r\n                    //   alert(authentication.message);\r\n                    // }\r\n                    if (route === '/updateprofile' && res.success === true) {\r\n                        this.profileService.goToProfile(this.getMyId());\r\n                        // this.router.navigateByUrl('/blankprofile');\r\n                    }\r\n                    if (route === '/updateprofile' && res.success === false) {\r\n                        this.router.navigateByUrl('/edition');\r\n                        // this.profileService.goToProfile(this.getMyId());\r\n                        // this.router.navigateByUrl('/blankprofile');\r\n                    }\r\n                    if (route === '/uploadpost') {\r\n                        console.log('retour au profil');\r\n                        // this.profileService.goToProfile(this.getMyId());\r\n                        this.router.navigateByUrl('/blankprofile');\r\n                        // this.profileService.goToProfile(this.getMyId());\r\n                        // this.router.navigateByUrl('/edition');\r\n                    }\r\n                    if (route === '/resetpassword') {\r\n                        this.router.navigateByUrl('/auth/login');\r\n                    }\r\n                });\r\n            }\r\n            catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n}\r\nAuthService.ɵfac = function AuthService_Factory(t) { return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ServerService), i0.ɵɵinject(i3.Router), i0.ɵɵinject(i4.DisplayingElementsService), i0.ɵɵinject(i5.ProfileService)); };\r\nAuthService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthService, factory: AuthService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}