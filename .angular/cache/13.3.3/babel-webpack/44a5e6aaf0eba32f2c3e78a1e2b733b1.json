{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./server.service\";\nexport let BuddyService = /*#__PURE__*/(() => {\n  class BuddyService {\n    // serverURL!: string;\n    constructor(http, serverService) {\n      this.http = http;\n      this.serverService = serverService;\n    }\n\n    ngOnInit() {\n      //   this.serverURL = this.serverService.serverUrl;\n      console.log(\"dans l'init\");\n    }\n\n    userIdBuilder(userData) {\n      this.connectedUser = userData;\n      console.log(\"dans l'account\", this.connectedUser);\n      alert('le buddy account a bien été créé');\n    }\n\n    getMyBuddies() {\n      // getMyBuddies(): Buddy[] {\n      // console.log('recherche de tes buddies.....');\n      return this.http.get(this.serverService.serverUrl + '/mybuddies', {\n        responseType: 'json'\n      });\n    }\n\n    getAllBuddies() {\n      // console.log('recherche de tous les buddies.....');\n      // console.log('server....', this.serverService.serverUrl);\n      return this.http.get(this.serverService.serverUrl + '/allbuddies', {\n        responseType: 'json'\n      });\n    }\n\n    getBuddyByID(id) {\n      return this.http.post(this.serverService.serverUrl + '/buddybyid', {\n        buddyTarget: id\n      });\n    }\n\n    getMe() {\n      console.log('dans authservice, on va fetcher moi)');\n      return this.http.get(this.serverService.serverUrl + '/me', {\n        responseType: 'text'\n      });\n    } // inviteBuddy(uuidToInvite: string): Observable<string> {\n    //   console.log(`envoi de l'invitation de ${uuidToInvite} au serveur...`);\n    //   return this.http.post<string>(\n    //     this.serverService.serverUrl + '/invitation',\n    //     { buddyTarget: uuidToInvite }\n    //   );\n    // }\n    // confirmBuddy(uuidToConfirm: string): Observable<string> {\n    //   console.log(`envoi de l'acceptation de ${uuidToConfirm} au serveur...`);\n    //   return this.http.post<string>(\n    //     this.serverService.serverUrl + '/confirmation',\n    //     { buddyTarget: uuidToConfirm }\n    //   );\n    // }\n\n\n    updateBuddy(uuidToUpdate, action) {\n      // console.log(`envoi de l'acceptation de ${uuidToUpdate} au serveur...`);\n      return this.http.post(this.serverService.serverUrl + action, {\n        buddyTarget: uuidToUpdate\n      });\n    }\n\n  }\n\n  BuddyService.ɵfac = function BuddyService_Factory(t) {\n    return new (t || BuddyService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ServerService));\n  };\n\n  BuddyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BuddyService,\n    factory: BuddyService.ɵfac,\n    providedIn: 'root'\n  });\n  return BuddyService;\n})();","map":null,"metadata":{},"sourceType":"module"}