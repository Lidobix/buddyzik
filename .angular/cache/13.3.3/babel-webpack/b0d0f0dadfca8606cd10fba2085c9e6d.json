{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { pictureValidator } from 'src/shared/picture-format.directive';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/services/auth.service\";\nimport * as i3 from \"src/services/image.service\";\nimport * as i4 from \"src/services/post.service\";\nimport * as i5 from \"src/services/profile.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\n\nfunction ModalPostComponent_img_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 12);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r0.previewPostPic, i0.ɵɵsanitizeUrl);\n  }\n}\n\nexport let ModalPostComponent = /*#__PURE__*/(() => {\n  class ModalPostComponent {\n    constructor(formBuilder, authService, imageService, postService, profileService) {\n      this.formBuilder = formBuilder;\n      this.authService = authService;\n      this.imageService = imageService;\n      this.postService = postService;\n      this.profileService = profileService;\n      this.cancelPost = new EventEmitter();\n      this.updatePosts = new EventEmitter();\n      this.selectedFile = null;\n      this.showFile = true;\n    }\n\n    ngOnInit() {\n      // this.postService.defineTarget();\n      this.postForm = this.formBuilder.group({\n        post: [null, Validators.required],\n        postPic: [null, pictureValidator(this.authService.pictureExtension)],\n        recipient: [this.postRecipient]\n      });\n    }\n\n    selectFile(event) {\n      const file = event.target.files[0];\n      this.imageService.getBase64(file).subscribe(str => {\n        this.previewPostPic = str;\n      });\n    }\n\n    onSubmitPostForm() {\n      this.postForm.value.postPic = this.previewPostPic;\n      const retour = this.postService.uploadPost(this.postForm, '/uploadpost', this.postRecipient);\n      console.log('retour = ', retour);\n      this.onCancelPost();\n      this.onUpdatePosts(); // this.postService.getAllPosts('869cd705-5d80-47e5-954d-84f2515fd7ad');\n    }\n\n    onUpdatePosts() {\n      this.updatePosts.emit(true);\n      console.log('update = ', this.updatePosts);\n    }\n\n    onCancelPost() {\n      this.cancelPost.emit(false); // this.updatePosts.emit(true);\n\n      console.log('cancelPost = ', this.cancelPost);\n    }\n\n  }\n\n  ModalPostComponent.ɵfac = function ModalPostComponent_Factory(t) {\n    return new (t || ModalPostComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ImageService), i0.ɵɵdirectiveInject(i4.PostService), i0.ɵɵdirectiveInject(i5.ProfileService));\n  };\n\n  ModalPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModalPostComponent,\n    selectors: [[\"app-modal-post\"]],\n    inputs: {\n      postRecipient: \"postRecipient\"\n    },\n    outputs: {\n      cancelPost: \"cancelPost\",\n      updatePosts: \"updatePosts\"\n    },\n    decls: 18,\n    vars: 2,\n    consts: [[1, \"modal\"], [3, \"formGroup\"], [\"for\", \"post\"], [1, \"previewContainer\"], [\"alt\", \"\", 3, \"src\", 4, \"ngIf\"], [\"name\", \"post\", \"id\", \"postInput\", \"formControlName\", \"post\", \"cols\", \"30\", \"rows\", \"5\"], [1, \"action\"], [\"mat-raised-button\", \"\", 3, \"click\"], [\"type\", \"file\", 2, \"display\", \"none\", 3, \"change\"], [\"fileInput\", \"\"], [\"mat-raised-button\", \"\", 1, \"button\", 3, \"click\"], [\"mat-raised-button\", \"\", \"type\", \"button\", 1, \"button\", 3, \"click\"], [\"alt\", \"\", 3, \"src\"]],\n    template: function ModalPostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"label\", 2)(3, \"h2\");\n        i0.ɵɵtext(4, \"Nouveau Post:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵtemplate(6, ModalPostComponent_img_6_Template, 1, 1, \"img\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"textarea\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function ModalPostComponent_Template_button_click_9_listener() {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r1 = i0.ɵɵreference(13);\n\n          return _r1.click();\n        });\n        i0.ɵɵelementStart(10, \"span\");\n        i0.ɵɵtext(11, \"Image...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 8, 9);\n        i0.ɵɵlistener(\"change\", function ModalPostComponent_Template_input_change_12_listener($event) {\n          return ctx.selectFile($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function ModalPostComponent_Template_button_click_14_listener() {\n          return ctx.onSubmitPostForm();\n        });\n        i0.ɵɵtext(15, \" POSTER \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function ModalPostComponent_Template_button_click_16_listener() {\n          return ctx.onCancelPost();\n        });\n        i0.ɵɵtext(17, \" ANNULER \");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.postForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.previewPostPic);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i6.NgIf, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i7.MatButton],\n    styles: [\"*[_ngcontent-%COMP%]{margin:0;padding:0}.modal[_ngcontent-%COMP%]{top:10%;border:1px solid black;padding:20px;position:fixed;display:flex;flex-direction:column;width:88%;background-color:#fff;box-shadow:5px 5px 5px #0000004d;border-radius:10px;z-index:8;-webkit-border-radius:10px;-moz-border-radius:10px;-ms-border-radius:10px;-o-border-radius:10px}@media screen and (min-width: 500px){.modal[_ngcontent-%COMP%]{width:40%;margin-left:50%}}.modal[_ngcontent-%COMP%]   .fileInput[_ngcontent-%COMP%]{visibility:hidden}.modal[_ngcontent-%COMP%]   .previewContainer[_ngcontent-%COMP%]{text-align:center}.modal[_ngcontent-%COMP%]   .previewContainer[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{border:1px solid black;max-height:300px;max-width:100%}.modal[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin:0}.modal[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin-left:10px;margin-right:11px}.modal[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:block}.modal[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{display:block;width:100%}.modal[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;resize:none}.modal[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .action[_ngcontent-%COMP%]{display:flex;margin-top:10px;justify-content:flex-start}.modal[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .action[_ngcontent-%COMP%]   .button[_ngcontent-%COMP%]{margin-right:7px;margin-top:5px;height:-moz-fit-content;height:fit-content}\"]\n  });\n  return ModalPostComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}