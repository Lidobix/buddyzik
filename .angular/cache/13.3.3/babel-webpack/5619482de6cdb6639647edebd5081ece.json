{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\33652\\\\Documents\\\\Projets persos\\\\buddyzik\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  //   obs$!: Observable<boolean>;\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n\n  canActivate(route, state) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.authService.getAuth();\n      console.log('dans le canactivate, token:', _this.authService.isLogged); // console.log('  this.authService.isLogged', this.authService.isLogged);\n\n      if (12) {\n        return true;\n      } else {\n        console.log('go to /auth/login');\n\n        _this.router.navigateByUrl('/auth/login');\n\n        return false;\n      }\n    })();\n  }\n\n}\n\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\n\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/33652/Documents/Projets persos/buddyzik/src/app/guards/auth.guards.ts"],"names":["i0","i1","i2","AuthGuard","constructor","authService","router","canActivate","route","state","getAuth","console","log","isLogged","navigateByUrl","ɵfac","AuthGuard_Factory","t","ɵɵinject","AuthService","Router","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,MAAMC,SAAN,CAAgB;AACnB;AACAC,EAAAA,WAAW,CAACC,WAAD,EAAcC,MAAd,EAAsB;AAC7B,SAAKD,WAAL,GAAmBA,WAAnB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AACKC,EAAAA,WAAW,CAACC,KAAD,EAAQC,KAAR,EAAe;AAAA;;AAAA;AAC5B,YAAM,KAAI,CAACJ,WAAL,CAAiBK,OAAjB,EAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2C,KAAI,CAACP,WAAL,CAAiBQ,QAA5D,EAF4B,CAG5B;;AACA,UAAI,EAAJ,EAAQ;AACJ,eAAO,IAAP;AACH,OAFD,MAGK;AACDF,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACA,QAAA,KAAI,CAACN,MAAL,CAAYQ,aAAZ,CAA0B,aAA1B;;AACA,eAAO,KAAP;AACH;AAX2B;AAY/B;;AAlBkB;;AAoBvBX,SAAS,CAACY,IAAV,GAAiB,SAASC,iBAAT,CAA2BC,CAA3B,EAA8B;AAAE,SAAO,KAAKA,CAAC,IAAId,SAAV,EAAqBH,EAAE,CAACkB,QAAH,CAAYjB,EAAE,CAACkB,WAAf,CAArB,EAAkDnB,EAAE,CAACkB,QAAH,CAAYhB,EAAE,CAACkB,MAAf,CAAlD,CAAP;AAAmF,CAApI;;AACAjB,SAAS,CAACkB,KAAV,GAAkB,aAAcrB,EAAE,CAACsB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEpB,SAAT;AAAoBqB,EAAAA,OAAO,EAAErB,SAAS,CAACY,IAAvC;AAA6CU,EAAAA,UAAU,EAAE;AAAzD,CAAtB,CAAhC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"src/services/auth.service\";\r\nimport * as i2 from \"@angular/router\";\r\nexport class AuthGuard {\r\n    //   obs$!: Observable<boolean>;\r\n    constructor(authService, router) {\r\n        this.authService = authService;\r\n        this.router = router;\r\n    }\r\n    async canActivate(route, state) {\r\n        await this.authService.getAuth();\r\n        console.log('dans le canactivate, token:', this.authService.isLogged);\r\n        // console.log('  this.authService.isLogged', this.authService.isLogged);\r\n        if (12) {\r\n            return true;\r\n        }\r\n        else {\r\n            console.log('go to /auth/login');\r\n            this.router.navigateByUrl('/auth/login');\r\n            return false;\r\n        }\r\n    }\r\n}\r\nAuthGuard.ɵfac = function AuthGuard_Factory(t) { return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router)); };\r\nAuthGuard.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthGuard, factory: AuthGuard.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}