{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\33652\\\\Documents\\\\Projets persos\\\\buddyzik\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./server.service\";\nimport * as i3 from \"./auth.service\";\nexport class BuddyService {\n  // serverURL!: string;\n  constructor(http, // private authService: AuthService,\n  serverService, authService) {\n    this.http = http;\n    this.serverService = serverService;\n    this.authService = authService;\n  }\n\n  ngOnInit() {\n    //   this.serverURL = this.serverService.serverUrl;\n    console.log(\"dans l'init\");\n  }\n\n  userIdBuilder(userData) {\n    this.connectedUser = userData;\n    console.log(\"dans l'account\", this.connectedUser);\n    alert('le buddy account a bien été créé');\n  }\n\n  getMyBuddies() {\n    // getMyBuddies(): Buddy[] {\n    // console.log('recherche de tes buddies.....');\n    return this.http.get(this.serverService.serverUrl + '/mybuddies');\n  }\n\n  getAllBuddies() {\n    console.log('recherche de tous les buddies.....');\n    return this.http.get(this.serverService.serverUrl + '/allbuddies');\n  }\n\n  getBuddyByID(id) {\n    return this.http.post(this.serverService.serverUrl + '/buddybyid', {\n      buddyTarget: id\n    });\n  } // getMe(): Observable<Buddy> {\n  //   console.log('dans authservice, on va fetcher moi)');\n  //   return this.http.post<Buddy>(this.serverService.serverUrl + '/me', '');\n  // }\n\n\n  getMyInformations() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      console.log('dans authservice, on va fetcher moi)');\n      return _this.http.post(_this.serverService.serverUrl + '/me', '');\n    })();\n  }\n\n  updateBuddy(uuidToUpdate, action) {\n    // console.log(`envoi de l'acceptation de ${uuidToUpdate} au serveur...`);\n    return this.http.post(this.serverService.serverUrl + action, {\n      buddyTarget: uuidToUpdate\n    });\n  }\n\n}\n\nBuddyService.ɵfac = function BuddyService_Factory(t) {\n  return new (t || BuddyService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ServerService), i0.ɵɵinject(i3.AuthService));\n};\n\nBuddyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BuddyService,\n  factory: BuddyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/33652/Documents/Projets persos/buddyzik/src/services/buddy.service.ts"],"names":["i0","i1","i2","i3","BuddyService","constructor","http","serverService","authService","ngOnInit","console","log","userIdBuilder","userData","connectedUser","alert","getMyBuddies","get","serverUrl","getAllBuddies","getBuddyByID","id","post","buddyTarget","getMyInformations","updateBuddy","uuidToUpdate","action","ɵfac","BuddyService_Factory","t","ɵɵinject","HttpClient","ServerService","AuthService","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,kBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,gBAApB;AACA,OAAO,MAAMC,YAAN,CAAmB;AACtB;AACAC,EAAAA,WAAW,CAACC,IAAD,EACX;AACAC,EAAAA,aAFW,EAEIC,WAFJ,EAEiB;AACxB,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;;AACDC,EAAAA,aAAa,CAACC,QAAD,EAAW;AACpB,SAAKC,aAAL,GAAqBD,QAArB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKG,aAAnC;AACAC,IAAAA,KAAK,CAAC,kCAAD,CAAL;AACH;;AACDC,EAAAA,YAAY,GAAG;AACX;AACA;AACA,WAAO,KAAKV,IAAL,CAAUW,GAAV,CAAc,KAAKV,aAAL,CAAmBW,SAAnB,GAA+B,YAA7C,CAAP;AACH;;AACDC,EAAAA,aAAa,GAAG;AACZT,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACA,WAAO,KAAKL,IAAL,CAAUW,GAAV,CAAc,KAAKV,aAAL,CAAmBW,SAAnB,GAA+B,aAA7C,CAAP;AACH;;AACDE,EAAAA,YAAY,CAACC,EAAD,EAAK;AACb,WAAO,KAAKf,IAAL,CAAUgB,IAAV,CAAe,KAAKf,aAAL,CAAmBW,SAAnB,GAA+B,YAA9C,EAA4D;AAC/DK,MAAAA,WAAW,EAAEF;AADkD,KAA5D,CAAP;AAGH,GA/BqB,CAgCtB;AACA;AACA;AACA;;;AACMG,EAAAA,iBAAiB,GAAG;AAAA;;AAAA;AACtBd,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACA,aAAO,KAAI,CAACL,IAAL,CAAUgB,IAAV,CAAe,KAAI,CAACf,aAAL,CAAmBW,SAAnB,GAA+B,KAA9C,EAAqD,EAArD,CAAP;AAFsB;AAGzB;;AACDO,EAAAA,WAAW,CAACC,YAAD,EAAeC,MAAf,EAAuB;AAC9B;AACA,WAAO,KAAKrB,IAAL,CAAUgB,IAAV,CAAe,KAAKf,aAAL,CAAmBW,SAAnB,GAA+BS,MAA9C,EAAsD;AACzDJ,MAAAA,WAAW,EAAEG;AAD4C,KAAtD,CAAP;AAGH;;AA7CqB;;AA+C1BtB,YAAY,CAACwB,IAAb,GAAoB,SAASC,oBAAT,CAA8BC,CAA9B,EAAiC;AAAE,SAAO,KAAKA,CAAC,IAAI1B,YAAV,EAAwBJ,EAAE,CAAC+B,QAAH,CAAY9B,EAAE,CAAC+B,UAAf,CAAxB,EAAoDhC,EAAE,CAAC+B,QAAH,CAAY7B,EAAE,CAAC+B,aAAf,CAApD,EAAmFjC,EAAE,CAAC+B,QAAH,CAAY5B,EAAE,CAAC+B,WAAf,CAAnF,CAAP;AAAyH,CAAhL;;AACA9B,YAAY,CAAC+B,KAAb,GAAqB,aAAcnC,EAAE,CAACoC,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEjC,YAAT;AAAuBkC,EAAAA,OAAO,EAAElC,YAAY,CAACwB,IAA7C;AAAmDW,EAAAA,UAAU,EAAE;AAA/D,CAAtB,CAAnC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nimport * as i2 from \"./server.service\";\r\nimport * as i3 from \"./auth.service\";\r\nexport class BuddyService {\r\n    // serverURL!: string;\r\n    constructor(http, \r\n    // private authService: AuthService,\r\n    serverService, authService) {\r\n        this.http = http;\r\n        this.serverService = serverService;\r\n        this.authService = authService;\r\n    }\r\n    ngOnInit() {\r\n        //   this.serverURL = this.serverService.serverUrl;\r\n        console.log(\"dans l'init\");\r\n    }\r\n    userIdBuilder(userData) {\r\n        this.connectedUser = userData;\r\n        console.log(\"dans l'account\", this.connectedUser);\r\n        alert('le buddy account a bien été créé');\r\n    }\r\n    getMyBuddies() {\r\n        // getMyBuddies(): Buddy[] {\r\n        // console.log('recherche de tes buddies.....');\r\n        return this.http.get(this.serverService.serverUrl + '/mybuddies');\r\n    }\r\n    getAllBuddies() {\r\n        console.log('recherche de tous les buddies.....');\r\n        return this.http.get(this.serverService.serverUrl + '/allbuddies');\r\n    }\r\n    getBuddyByID(id) {\r\n        return this.http.post(this.serverService.serverUrl + '/buddybyid', {\r\n            buddyTarget: id,\r\n        });\r\n    }\r\n    // getMe(): Observable<Buddy> {\r\n    //   console.log('dans authservice, on va fetcher moi)');\r\n    //   return this.http.post<Buddy>(this.serverService.serverUrl + '/me', '');\r\n    // }\r\n    async getMyInformations() {\r\n        console.log('dans authservice, on va fetcher moi)');\r\n        return this.http.post(this.serverService.serverUrl + '/me', '');\r\n    }\r\n    updateBuddy(uuidToUpdate, action) {\r\n        // console.log(`envoi de l'acceptation de ${uuidToUpdate} au serveur...`);\r\n        return this.http.post(this.serverService.serverUrl + action, {\r\n            buddyTarget: uuidToUpdate,\r\n        });\r\n    }\r\n}\r\nBuddyService.ɵfac = function BuddyService_Factory(t) { return new (t || BuddyService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ServerService), i0.ɵɵinject(i3.AuthService)); };\r\nBuddyService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: BuddyService, factory: BuddyService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}